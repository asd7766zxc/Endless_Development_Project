<local:BasePage x:TypeArguments="local:LoginViewModel" x:Class="Chat_Pro_NCP.LoginPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Chat_Pro_NCP"
      mc:Ignorable="d" 
      Margin="0 0 0 0"
      x:Name="Page"
      d:DesignHeight="400" d:DesignWidth="400"
      Title="LoginPage">
    <Page.Resources>

        <Color x:Key="BackgroundLight">#efefef</Color>
        <SolidColorBrush x:Key="BackgroundLightBrush" Color="{StaticResource BackgroundLight}" />

        <Color x:Key="BackgroundTransparency">#0DB2EBF2</Color>
        <SolidColorBrush x:Key="BackgroundTransparencyBrush" Color="{StaticResource BackgroundTransparency}" />

        <Color x:Key="BackgroundTransparent">#00B2EBF2</Color>
        <SolidColorBrush x:Key="BackgroundTransparentBrush" Color="{StaticResource BackgroundTransparent}" />

        <Color x:Key="BackgroundVeryLight">#fafafa</Color>
        <SolidColorBrush x:Key="BackgroundVeryLightBrush" Color="{StaticResource BackgroundVeryLight}" />

        <Color x:Key="ForegroundMain">#686868</Color>
        <SolidColorBrush x:Key="ForegroundMainBrush" Color="{StaticResource ForegroundMain}" />

        <Color x:Key="ForegroundVeryDark">#000000</Color>
        <SolidColorBrush x:Key="ForegroundVeryDarkBrush" Color="{StaticResource ForegroundVeryDark}" />

        <Color x:Key="ForegroundLight">#ffffff</Color>
        <SolidColorBrush x:Key="ForegroundLightBrush" Color="{StaticResource ForegroundLight}" />

        <Color x:Key="ForegroundLogoGreen">#FF8BC34A</Color>
        <SolidColorBrush x:Key="ForegroundLogoGreenBrush" Color="{StaticResource ForegroundLogoGreen}" />

        <Color x:Key="ForegroundLogoRed">#FFf44336</Color>
        <SolidColorBrush x:Key="ForegroundLogoRedBrush" Color="{StaticResource ForegroundLogoRed}" />

        <Color x:Key="ButtonFace">#AA404040</Color>
        <SolidColorBrush x:Key="ButtonFaceBrush" Color="{StaticResource ButtonFace}" />

        <Color x:Key="ButtonTrack">#0000</Color>
        <SolidColorBrush x:Key="ButtonTrackBrush" Color="{StaticResource ButtonTrack}" />

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#0000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#AA404040"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#0000"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#ADC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#AD2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#0000"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#0000"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF594849"/>

        <Style TargetType="{x:Type TextBlock}" x:Key="SpinText">
            <Setter Property="FontFamily" Value="pack://appliction;,,,/Fonts/#Lato Regular"/>
            <Setter Property="Text" Value="->"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform>

                    </RotateTransform>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Storyboard x:Key="Spin">
                    <DoubleAnimation
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                        From="0"
                        To="360"
                        Duration="0:0:0.1"
                        RepeatBehavior="Forever"/>
                </Storyboard>
            </Style.Resources>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="SpinStoryboard"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="#FAFAFA"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="50 10"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="local:IsBusyProperty.Value" Value="False"/>
            <Setter Property="Background" Value="#0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#0000" SnapsToDevicePixels="true">
                            <Grid>
                                <TextBlock Text="Next"
                                           Visibility="{TemplateBinding  local:IsBusyProperty.Value, Converter={local:BooleanToVisbilityConverter}}"
                                           HorizontalAlignment="Center"
                                           FontSize="17"
                                           Margin="20 10"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                <TextBlock Style="{StaticResource SpinText}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisbilityConverter},ConverterParameter=True }">
                                </TextBlock>
                            </Grid>
                        </Border>



                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonFace}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonTrack}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>


                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="#FAFAFA"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="50 10"/>
            <Setter Property="Margin" Value="0 5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>


                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonFace}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonTrack}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="textboxstyle1" TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="FontFamily" Value="pack://appliction;,,,/Fonts/#Lato Regular"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0 3 0 3"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="Background" Value="#0000"/>

            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">

                        <Grid>

                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <TextBlock IsHitTestVisible="False" Text="{TemplateBinding Tag}" x:Name="placehover"
                                       FontFamily="pack://appliction;,,,/Fonts/#Lato Thin"
                                       FontSize="15"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Foreground="White">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text,RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="passwordboxstyle1" TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="FontFamily" Value="pack://appliction;,,,/Fonts/#Lato Regular"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0 3 0 3"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="local:MonitorPasswordPropertys.Value" Value="True"/>
            <Setter Property="Background" Value="#0000"/>

            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">

                        <Grid>

                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <TextBlock IsHitTestVisible="False" Text="{TemplateBinding Tag}" x:Name="placehover"
                                       FontFamily="pack://appliction;,,,/Fonts/#Lato Thin"
                                       FontSize="15"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="{TemplateBinding local:HadTextProperty.Value , Converter={local:BooleanToVisbilityConverter}}"
                                       Foreground="White">
                            </TextBlock>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>

        <Style x:Key="AUniteButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="local:IsBusyProperty.Value" Value="False"/>
            <Setter Property="Background" Value="#0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#0000" SnapsToDevicePixels="true">
                            <Grid>
                                <TextBlock Text="{TemplateBinding Content}"
                                    Focusable="False"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Visibility="{Binding IsBusyProperty.Value, Converter={local:BooleanToVisbilityConverter}}"
                                           />

                                <TextBlock Style="{StaticResource SpinText}"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"     
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent} ,Converter={local:BooleanToVisbilityConverter},FallbackValue=Collapased}"
                                           />


                            </Grid>
                        </Border>


                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonFace}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonTrack}" Duration="0:0:0.4" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>


                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>


    <Border>
        <Grid >
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.TextAlignment="Center">
                <Grid Margin="0 100 0 0">
                
                    <Border Background="#AA282828"
                            CornerRadius="0"
                            Padding="20 20 20 20"
                            Height="350"
                            Width="200"
                            Margin="0 0 0 0">


                        <StackPanel>


                            <TextBlock Text="登入" FontSize="30" FontFamily="pack://appliction;,,,/Fonts/#Lato Regular" Foreground="White"/>

                            <TextBox Text="{Binding Email}" Tag="Account" Style="{StaticResource textboxstyle1}"/>
                            <PasswordBox x:Name="PasswordText" Tag="Password"  Style="{StaticResource passwordboxstyle1}"/>
                            <Button  Content="{Binding LoginButtonContent}"
                                     local:IsBusyProperty.Value="{Binding LoginIsRunning}"
                                     Command="{Binding LoginCommand}" 
                                     CommandParameter="{Binding ElementName=Page}"  
                                     FontFamily="pack://appliction;,,,/Fonts/#Lato Regular" 
                                     HorizontalAlignment="Center" 
                                     Style="{StaticResource ButtonStyle1}"/>
                        </StackPanel>

                    </Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                           
                        </Grid.ColumnDefinitions>
                        
                        <Label Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="White" Content="EDP"  />
                        <Label Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="White" Content="EDP"  >
                            <Label.Effect>
                                <BlurEffect />
                            </Label.Effect>
                        </Label>
                        <Path Grid.Column="2" StrokeThickness="1" Stroke="White" Fill="Transparent">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="40,0">
                                        <PolyLineSegment Points="30,20,0,30"/>
                                        <LineSegment Point="0,0" IsStroked="False"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                         </Path>
                        <Path Grid.Column="2" StrokeThickness="1" Stroke="White" Fill="Transparent">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="40,0">
                                        <PolyLineSegment Points="30,20,0,30"/>
                                        <LineSegment Point="0,0" IsStroked="False"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                            <Path.Effect>
                                <BlurEffect />
                            </Path.Effect>
                        </Path>
                    </Grid>
                </Grid>
                <Button Command="{Binding NoAccount}" Content ="沒有帳號嗎?" FontFamily="pack://appliction;,,,/Fonts/#Lato Regular" HorizontalAlignment="Center" Background="Transparent" Foreground="White" Style="{DynamicResource ButtonStyle2}" Margin="0 0 0 0"/>
         
            </StackPanel>
        </Grid>
    </Border>
</local:BasePage>


