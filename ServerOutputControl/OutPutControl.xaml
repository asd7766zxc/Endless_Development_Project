<UserControl x:Class="Endless_Development_Project_Studio.ServerOutputControl.OutPutControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Endless_Development_Project_Studio.ServerOutputControl"
             xmlns:local1="clr-namespace:Chat_Pro_NCP"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">


    <UserControl.Resources>
        <Style  x:Key="CellStyleOutPut" TargetType="{x:Type DataGridCell}" >

            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"        
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FDCBA5" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#F6416C" />
                </Trigger>
                <Trigger Property="DataGridCell.IsSelected" Value="False">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FDCBA5" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  x:Key="CellStyleTime" TargetType="{x:Type DataGridCell}" >
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>

            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"        
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FDCBA5" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#F6416C" />
                </Trigger>
                <Trigger Property="DataGridCell.IsSelected" Value="False">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FF80CBC4" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#FF80CBC4" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  x:Key="CellStyleType" TargetType="{x:Type DataGridCell}" >
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>

            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"        
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FDCBA5" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#F6416C" />
                </Trigger>
                <Trigger Property="DataGridCell.IsSelected" Value="False">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="{Binding TypeColor,Converter={local1:StringRGBToBrushConverter}}" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="{Binding TypeColor,Converter={local1:StringRGBToBrushConverter}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  x:Key="CellStyleThread" TargetType="{x:Type DataGridCell}" >
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>

            <Setter Property="Height" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"        
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#FDCBA5" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#F6416C" />
                </Trigger>
                <Trigger Property="DataGridCell.IsSelected" Value="False">
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush">
                        <Setter.Value >
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value >
                            <SolidColorBrush Color="#03A9F4" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="#03A9F4" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RowHeaderSelector" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Border Height="10" Width="10" Background="{Binding TypeColor,Converter={local1:StringRGBToBrushConverter}}" >
                                    <Border.RenderTransform>
                                        <RotateTransform CenterX="5"  CenterY="5"  Angle="45" />
                                    </Border.RenderTransform>
                                </Border>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"        
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer  x:Name="DG_ScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid DataContext="{x:Static local:LogItemListDesignModel.Instance}">
        <!-- <Grid.Resources>
            DataTemplate for Published Date column defined in Grid.Resources.  PublishDate is a property on the ItemsSource of type DateTime
            <DataTemplate x:Key="DateTemplate" >
                <Border>
                    <Grid Background="#AA1e1e1e">

                        <Grid Margin="15 2.5 15 2.5" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Height="10" Width="10" Background="{Binding TypeColor,Converter={local1:StringRGBToBrushConverter}}" >
                                <Border.RenderTransform>
                                    <RotateTransform CenterX="5"  CenterY="5"  Angle="45" />
                                </Border.RenderTransform>
                            </Border>
                            <TextBox Grid.Column="1" BorderThickness="0" Background="Transparent" Foreground="#FF80CBC4"  TextAlignment="Center" VerticalAlignment="Center"  Text="{Binding TimeText}" FontFamily="{StaticResource LatoRegular}"/>
                            <TextBox Grid.Column="2" BorderThickness="0" Background="Transparent" Foreground="#fff" TextAlignment="Left" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Text="{Binding OutputText}" FontFamily="{StaticResource LatoRegular}" />
                        </Grid>
                    </Grid>
                </Border>
            </DataTemplate>
        </Grid.Resources>-->
        <!--<ScrollViewer x:Name="ViewScroller" VerticalScrollBarVisibility="Hidden">
            <ItemsControl Name="ComplexControl"
                      ItemsSource="{Binding Path=Items}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:OutPutItemControl />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>-->
        <DataGrid x:Name="CustomerGrid"
                          HorizontalAlignment="Stretch"
                          VerticalScrollBarVisibility="Hidden"
                          GridLinesVisibility="None"
                          IsReadOnly="True"
                          SnapsToDevicePixels="True"
                          ItemsSource="{Binding Items}"
                          ColumnWidth="*"
                          ScrollBar.Scroll="CustomerGrid_Scroll"
                          CanUserResizeColumns="False"         
                          EnableColumnVirtualization="True"
                          EnableRowVirtualization="True"
                          CanUserResizeRows="False"
                          AlternationCount="1"
                          RowHeaderWidth="20"
                          MinRowHeight="20"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          RowHeaderStyle="{StaticResource RowHeaderSelector}"
                          RowBackground="Transparent"
                          AutoGenerateColumns="False" Style="{StaticResource DataGridStyle1}">
            <DataGrid.Columns>
                <!--<DataGridTemplateColumn Header="Publish Date" CellTemplate="{StaticResource DateTemplate}"  />-->
                <DataGridTextColumn  Width="60"  Binding="{Binding TimeText}" FontFamily="{StaticResource LatoRegular}" CellStyle="{StaticResource CellStyleTime}"   />
                <DataGridTextColumn  Binding="{Binding OutputText}" FontFamily="{StaticResource LatoRegular}"  CellStyle="{StaticResource CellStyleOutPut}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
